================================================================================
type declaration enumeration
================================================================================
type Ensure = Enum['present', 'absent']
--------------------------------------------------------------------------------
(manifest
  (statement
    (type_alias
      (type)
      (type)
      (access
        (access_element
          (single_quoted_string))
        (access_element
          (single_quoted_string))))))

================================================================================
type declaration enumeration with trailing comma
================================================================================
type Ensure = Enum['present', 'absent',]
--------------------------------------------------------------------------------
(manifest
  (statement
    (type_alias
      (type)
      (type)
      (access
        (access_element
          (single_quoted_string))
        (access_element
          (single_quoted_string))))))

================================================================================
type declaration variant
================================================================================
type Compose = Variant[String,Integer]
--------------------------------------------------------------------------------
(manifest
  (statement
    (type_alias
      (type)
      (type)
      (access
        (access_element
          (type))
        (access_element
          (type))))))

================================================================================
type declaration nested
================================================================================
type Nested = Optional[Enum['default', 'foo', 'bar']]
--------------------------------------------------------------------------------
(manifest
  (statement
    (type_alias
      (type)
    (type)
    (access
      (access_element
        (type)
        (access
          (access_element
            (single_quoted_string))
          (access_element
            (single_quoted_string))
          (access_element
            (single_quoted_string))))))))

================================================================================
type declaration regex pattern
================================================================================
type Foo = Pattern[/\/slash/]
--------------------------------------------------------------------------------
(manifest
  (statement
    (type_alias
      (type)
    (type)
    (access
      (access_element
        (regex))))))
